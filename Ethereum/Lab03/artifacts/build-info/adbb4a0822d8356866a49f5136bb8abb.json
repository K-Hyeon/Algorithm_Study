{
	"id": "adbb4a0822d8356866a49f5136bb8abb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Chapter4/Ex4_4.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 < 0.9.0;\r\n\r\ncontract Ex4_4{\r\n\r\n    function fun1(uint a) public pure returns(uint){\r\n        \r\n        if(a>=1){\r\n            a = 1;\r\n        } else if(a>=2){\r\n            a = 2;\r\n        } else if(a>=3){\r\n            a = 3;\r\n        }else{\r\n            a = 4;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    function fun2(uint a) public pure returns(uint){\r\n        if(a>=1){\r\n            a = 1;\r\n        }\r\n        if(a>=2){\r\n            a = 2;\r\n        }\r\n        if(a>=3){\r\n            a = 3;\r\n        }else{\r\n            a = 4;\r\n        }\r\n        return a;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Chapter4/Ex4_4.sol": {
				"Ex4_4": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								}
							],
							"name": "fun1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								}
							],
							"name": "fun2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Chapter4/Ex4_4.sol\":72:628  contract Ex4_4{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Chapter4/Ex4_4.sol\":72:628  contract Ex4_4{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a927e8f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xacd9fd65\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Chapter4/Ex4_4.sol\":365:625  function fun2(uint a) public pure returns(uint){... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Chapter4/Ex4_4.sol\":95:357  function fun1(uint a) public pure returns(uint){... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Chapter4/Ex4_4.sol\":365:625  function fun2(uint a) public pure returns(uint){... */\n    tag_8:\n        /* \"Chapter4/Ex4_4.sol\":407:411  uint */\n      0x00\n        /* \"Chapter4/Ex4_4.sol\":429:430  1 */\n      0x01\n        /* \"Chapter4/Ex4_4.sol\":426:427  a */\n      dup3\n        /* \"Chapter4/Ex4_4.sol\":426:430  a>=1 */\n      lt\n        /* \"Chapter4/Ex4_4.sol\":423:463  if(a>=1){... */\n      tag_16\n      jumpi\n        /* \"Chapter4/Ex4_4.sol\":450:451  1 */\n      0x01\n        /* \"Chapter4/Ex4_4.sol\":446:451  a = 1 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":423:463  if(a>=1){... */\n    tag_16:\n        /* \"Chapter4/Ex4_4.sol\":479:480  2 */\n      0x02\n        /* \"Chapter4/Ex4_4.sol\":476:477  a */\n      dup3\n        /* \"Chapter4/Ex4_4.sol\":476:480  a>=2 */\n      lt\n        /* \"Chapter4/Ex4_4.sol\":473:513  if(a>=2){... */\n      tag_17\n      jumpi\n        /* \"Chapter4/Ex4_4.sol\":500:501  2 */\n      0x02\n        /* \"Chapter4/Ex4_4.sol\":496:501  a = 2 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":473:513  if(a>=2){... */\n    tag_17:\n        /* \"Chapter4/Ex4_4.sol\":529:530  3 */\n      0x03\n        /* \"Chapter4/Ex4_4.sol\":526:527  a */\n      dup3\n        /* \"Chapter4/Ex4_4.sol\":526:530  a>=3 */\n      lt\n        /* \"Chapter4/Ex4_4.sol\":523:599  if(a>=3){... */\n      tag_18\n      jumpi\n        /* \"Chapter4/Ex4_4.sol\":550:551  3 */\n      0x03\n        /* \"Chapter4/Ex4_4.sol\":546:551  a = 3 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":523:599  if(a>=3){... */\n      jump(tag_19)\n    tag_18:\n        /* \"Chapter4/Ex4_4.sol\":586:587  4 */\n      0x04\n        /* \"Chapter4/Ex4_4.sol\":582:587  a = 4 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":523:599  if(a>=3){... */\n    tag_19:\n        /* \"Chapter4/Ex4_4.sol\":616:617  a */\n      dup2\n        /* \"Chapter4/Ex4_4.sol\":609:617  return a */\n      swap1\n      pop\n        /* \"Chapter4/Ex4_4.sol\":365:625  function fun2(uint a) public pure returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Chapter4/Ex4_4.sol\":95:357  function fun1(uint a) public pure returns(uint){... */\n    tag_13:\n        /* \"Chapter4/Ex4_4.sol\":137:141  uint */\n      0x00\n        /* \"Chapter4/Ex4_4.sol\":169:170  1 */\n      0x01\n        /* \"Chapter4/Ex4_4.sol\":166:167  a */\n      dup3\n        /* \"Chapter4/Ex4_4.sol\":166:170  a>=1 */\n      lt\n        /* \"Chapter4/Ex4_4.sol\":163:331  if(a>=1){... */\n      tag_21\n      jumpi\n        /* \"Chapter4/Ex4_4.sol\":190:191  1 */\n      0x01\n        /* \"Chapter4/Ex4_4.sol\":186:191  a = 1 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":163:331  if(a>=1){... */\n      jump(tag_22)\n    tag_21:\n        /* \"Chapter4/Ex4_4.sol\":215:216  2 */\n      0x02\n        /* \"Chapter4/Ex4_4.sol\":212:213  a */\n      dup3\n        /* \"Chapter4/Ex4_4.sol\":212:216  a>=2 */\n      lt\n        /* \"Chapter4/Ex4_4.sol\":209:331  if(a>=2){... */\n      tag_23\n      jumpi\n        /* \"Chapter4/Ex4_4.sol\":236:237  2 */\n      0x02\n        /* \"Chapter4/Ex4_4.sol\":232:237  a = 2 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":209:331  if(a>=2){... */\n      jump(tag_24)\n    tag_23:\n        /* \"Chapter4/Ex4_4.sol\":261:262  3 */\n      0x03\n        /* \"Chapter4/Ex4_4.sol\":258:259  a */\n      dup3\n        /* \"Chapter4/Ex4_4.sol\":258:262  a>=3 */\n      lt\n        /* \"Chapter4/Ex4_4.sol\":255:331  if(a>=3){... */\n      tag_25\n      jumpi\n        /* \"Chapter4/Ex4_4.sol\":282:283  3 */\n      0x03\n        /* \"Chapter4/Ex4_4.sol\":278:283  a = 3 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":255:331  if(a>=3){... */\n      jump(tag_26)\n    tag_25:\n        /* \"Chapter4/Ex4_4.sol\":318:319  4 */\n      0x04\n        /* \"Chapter4/Ex4_4.sol\":314:319  a = 4 */\n      swap2\n      pop\n        /* \"Chapter4/Ex4_4.sol\":255:331  if(a>=3){... */\n    tag_26:\n        /* \"Chapter4/Ex4_4.sol\":209:331  if(a>=2){... */\n    tag_24:\n        /* \"Chapter4/Ex4_4.sol\":163:331  if(a>=1){... */\n    tag_22:\n        /* \"Chapter4/Ex4_4.sol\":348:349  a */\n      dup2\n        /* \"Chapter4/Ex4_4.sol\":341:349  return a */\n      swap1\n      pop\n        /* \"Chapter4/Ex4_4.sol\":95:357  function fun1(uint a) public pure returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_28:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_30:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_31:\n        /* \"#utility.yul\":490:514   */\n      tag_40\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_41:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_32:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_43\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_46\n      tag_28\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":766:885   */\n    tag_45:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_47\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_32\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_33:\n        /* \"#utility.yul\":1112:1136   */\n      tag_49\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_30\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_10:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_51\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_33\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c314f1cfa660f33f529cc6c0b2a1806e535a7a2a32e01a1b15d7ae28e8ba0cee64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101e1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637a927e8f1461003b578063acd9fd651461006b575b600080fd5b61005560048036038101906100509190610154565b61009b565b6040516100629190610190565b60405180910390f35b61008560048036038101906100809190610154565b6100d5565b6040516100929190610190565b60405180910390f35b6000600182106100aa57600191505b600282106100b757600291505b600382106100c857600391506100cd565b600491505b819050919050565b6000600182106100e85760019150610111565b600282106100f95760029150610110565b6003821061010a576003915061010f565b600491505b5b5b819050919050565b600080fd5b6000819050919050565b6101318161011e565b811461013c57600080fd5b50565b60008135905061014e81610128565b92915050565b60006020828403121561016a57610169610119565b5b60006101788482850161013f565b91505092915050565b61018a8161011e565b82525050565b60006020820190506101a56000830184610181565b9291505056fea2646970667358221220c314f1cfa660f33f529cc6c0b2a1806e535a7a2a32e01a1b15d7ae28e8ba0cee64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A927E8F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xACD9FD65 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT PUSH2 0xAA JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0xB7 JUMPI PUSH1 0x2 SWAP2 POP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xC8 JUMPI PUSH1 0x3 SWAP2 POP PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SWAP2 POP JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT PUSH2 0xE8 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x111 JUMP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0xF9 JUMPI PUSH1 0x2 SWAP2 POP PUSH2 0x110 JUMP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0x10A JUMPI PUSH1 0x3 SWAP2 POP PUSH2 0x10F JUMP JUMPDEST PUSH1 0x4 SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131 DUP2 PUSH2 0x11E JUMP JUMPDEST DUP2 EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E DUP2 PUSH2 0x128 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x119 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A DUP2 PUSH2 0x11E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 EQ CALL 0xCF 0xA6 PUSH1 0xF3 EXTCODEHASH MSTORE SWAP13 0xC6 0xC0 0xB2 LOG1 DUP1 PUSH15 0x535A7A2A32E01A1B15D7AE28E8BA0C 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "72:556:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@fun1_43": {
									"entryPoint": 213,
									"id": 43,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fun2_85": {
									"entryPoint": 155,
									"id": 85,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80637a927e8f1461003b578063acd9fd651461006b575b600080fd5b61005560048036038101906100509190610154565b61009b565b6040516100629190610190565b60405180910390f35b61008560048036038101906100809190610154565b6100d5565b6040516100929190610190565b60405180910390f35b6000600182106100aa57600191505b600282106100b757600291505b600382106100c857600391506100cd565b600491505b819050919050565b6000600182106100e85760019150610111565b600282106100f95760029150610110565b6003821061010a576003915061010f565b600491505b5b5b819050919050565b600080fd5b6000819050919050565b6101318161011e565b811461013c57600080fd5b50565b60008135905061014e81610128565b92915050565b60006020828403121561016a57610169610119565b5b60006101788482850161013f565b91505092915050565b61018a8161011e565b82525050565b60006020820190506101a56000830184610181565b9291505056fea2646970667358221220c314f1cfa660f33f529cc6c0b2a1806e535a7a2a32e01a1b15d7ae28e8ba0cee64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A927E8F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xACD9FD65 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT PUSH2 0xAA JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0xB7 JUMPI PUSH1 0x2 SWAP2 POP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xC8 JUMPI PUSH1 0x3 SWAP2 POP PUSH2 0xCD JUMP JUMPDEST PUSH1 0x4 SWAP2 POP JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT PUSH2 0xE8 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x111 JUMP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0xF9 JUMPI PUSH1 0x2 SWAP2 POP PUSH2 0x110 JUMP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0x10A JUMPI PUSH1 0x3 SWAP2 POP PUSH2 0x10F JUMP JUMPDEST PUSH1 0x4 SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131 DUP2 PUSH2 0x11E JUMP JUMPDEST DUP2 EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E DUP2 PUSH2 0x128 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x119 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18A DUP2 PUSH2 0x11E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 EQ CALL 0xCF 0xA6 PUSH1 0xF3 EXTCODEHASH MSTORE SWAP13 0xC6 0xC0 0xB2 LOG1 DUP1 PUSH15 0x535A7A2A32E01A1B15D7AE28E8BA0C 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "72:556:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:260;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;95:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;365:260;407:4;429:1;426;:4;423:40;;450:1;446:5;;423:40;479:1;476;:4;473:40;;500:1;496:5;;473:40;529:1;526;:4;523:76;;550:1;546:5;;523:76;;;586:1;582:5;;523:76;616:1;609:8;;365:260;;;:::o;95:262::-;137:4;169:1;166;:4;163:168;;190:1;186:5;;163:168;;;215:1;212;:4;209:122;;236:1;232:5;;209:122;;;261:1;258;:4;255:76;;282:1;278:5;;255:76;;;318:1;314:5;;255:76;209:122;163:168;348:1;341:8;;95:262;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "96200",
								"executionCost": "147",
								"totalCost": "96347"
							},
							"external": {
								"fun1(uint256)": "infinite",
								"fun2(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 72,
									"end": 628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 628,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c314f1cfa660f33f529cc6c0b2a1806e535a7a2a32e01a1b15d7ae28e8ba0cee64736f6c63430008120033",
									".code": [
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "7A927E8F"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "ACD9FD65"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72,
											"end": 628,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 365,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 95,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 95,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 95,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 407,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 426,
											"end": 430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 423,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 423,
											"end": 463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 450,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 423,
											"end": 463,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 423,
											"end": 463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 480,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 476,
											"end": 480,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 473,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 500,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 473,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 526,
											"end": 530,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 523,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 523,
											"end": 599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 550,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 546,
											"end": 551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 546,
											"end": 551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 523,
											"end": 599,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 599,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 523,
											"end": 599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 599,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 523,
											"end": 599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 616,
											"end": 617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 609,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 95,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 166,
											"end": 170,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 163,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 163,
											"end": 331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 190,
											"end": 191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 163,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 163,
											"end": 331,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 163,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 163,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 215,
											"end": 216,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 212,
											"end": 216,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 209,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 209,
											"end": 331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 236,
											"end": 237,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 209,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 209,
											"end": 331,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 209,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 209,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 258,
											"end": 262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 255,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 255,
											"end": 331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 282,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 255,
											"end": 331,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 255,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 314,
											"end": 319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 255,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 209,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 209,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 163,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 163,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Chapter4/Ex4_4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"fun1(uint256)": "acd9fd65",
							"fun2(uint256)": "7a927e8f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"fun1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"fun2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Chapter4/Ex4_4.sol\":\"Ex4_4\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Chapter4/Ex4_4.sol\":{\"keccak256\":\"0x218644a82b96822067d389f00a9a564171e3d3ccc61d55fc4325acff92a52b8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ba635ff98deabdac488c47ffe28093571dcf27cb72333e295b38d6e830abf243\",\"dweb:/ipfs/QmdpftxHFsuJnZmrbmxgTd9NizvrxJFtyGsryYkkjFptd1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Chapter4/Ex4_4.sol": {
				"ast": {
					"absolutePath": "Chapter4/Ex4_4.sol",
					"exportedSymbols": {
						"Ex4_4": [
							86
						]
					},
					"id": 87,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ex4_4",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "Ex4_4",
							"nameLocation": "81:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "142:215:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "212:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "32",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "212:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "258:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "33",
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "261:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "258:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 36,
															"nodeType": "Block",
															"src": "299:32:0",
															"statements": [
																{
																	"expression": {
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 32,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "314:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "318:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "314:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 35,
																	"nodeType": "ExpressionStatement",
																	"src": "314:5:0"
																}
															]
														},
														"id": 37,
														"nodeType": "IfStatement",
														"src": "255:76:0",
														"trueBody": {
															"id": 31,
															"nodeType": "Block",
															"src": "263:32:0",
															"statements": [
																{
																	"expression": {
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 27,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "278:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "33",
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "282:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "278:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 30,
																	"nodeType": "ExpressionStatement",
																	"src": "278:5:0"
																}
															]
														}
													},
													"id": 38,
													"nodeType": "IfStatement",
													"src": "209:122:0",
													"trueBody": {
														"id": 23,
														"nodeType": "Block",
														"src": "217:32:0",
														"statements": [
															{
																"expression": {
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 19,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "232:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "32",
																		"id": 20,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "236:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "232:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 22,
																"nodeType": "ExpressionStatement",
																"src": "232:5:0"
															}
														]
													}
												},
												"id": 39,
												"nodeType": "IfStatement",
												"src": "163:168:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "171:32:0",
													"statements": [
														{
															"expression": {
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 11,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "186:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "190:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "186:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 14,
															"nodeType": "ExpressionStatement",
															"src": "186:5:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 40,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "348:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 41,
												"nodeType": "Return",
												"src": "341:8:0"
											}
										]
									},
									"functionSelector": "acd9fd65",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fun1",
									"nameLocation": "104:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "114:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "109:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "109:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:8:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "137:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:6:0"
									},
									"scope": 86,
									"src": "95:262:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "412:213:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "426:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "IfStatement",
												"src": "423:40:0",
												"trueBody": {
													"id": 57,
													"nodeType": "Block",
													"src": "431:32:0",
													"statements": [
														{
															"expression": {
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 53,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "450:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "446:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 56,
															"nodeType": "ExpressionStatement",
															"src": "446:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 59,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "32",
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "476:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"nodeType": "IfStatement",
												"src": "473:40:0",
												"trueBody": {
													"id": 66,
													"nodeType": "Block",
													"src": "481:32:0",
													"statements": [
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 62,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "496:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "500:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "496:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "496:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "33",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "529:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "526:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 80,
													"nodeType": "Block",
													"src": "567:32:0",
													"statements": [
														{
															"expression": {
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 76,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "582:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 79,
															"nodeType": "ExpressionStatement",
															"src": "582:5:0"
														}
													]
												},
												"id": 81,
												"nodeType": "IfStatement",
												"src": "523:76:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "531:32:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "546:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "33",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "550:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "546:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "546:5:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 82,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "616:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 49,
												"id": 83,
												"nodeType": "Return",
												"src": "609:8:0"
											}
										]
									},
									"functionSelector": "7a927e8f",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fun2",
									"nameLocation": "374:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "384:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "379:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:8:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:6:0"
									},
									"scope": 86,
									"src": "365:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 87,
							"src": "72:556:0",
							"usedErrors": []
						}
					],
					"src": "36:592:0"
				},
				"id": 0
			}
		}
	}
}